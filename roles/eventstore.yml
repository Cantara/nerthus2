name: Setup EventStore
dependencies:
  - role: docker
  - role: service
vars:
  service:
  zone:
  tag: ":latest"
  service_in_docker: true
tasks:
  - set_fact:
      tag: :22.10.1-alpha-arm64v8
    when: ansible_architecture == "aarch64"
  - name: Create eventstore data directory if it does not exist
    become: yes
    become_user: "root"
    ansible.builtin.file:
      path: "/var/lib/{{ service }}"
      state: directory
      mode: '0750'
      owner: "{{ service }}"
      group: "{{ service }}"
  - name: Create eventstore log directory if it does not exist
    become: yes
    become_user: "root"
    ansible.builtin.file:
      path: "/var/log/{{ service }}"
      state: directory
      mode: '0750'
      owner: "{{ service }}"
      group: "{{ service }}"
  - name: Find hostname
    shell: |
      hostname -I | cut -f1 -d' '
    register: ip_adder
  - name: Create a eventstore container
    become: yes
    become_user: "{{ service }}"
    community.docker.docker_container:
      name: eventstore
      image: "eventstore/eventstore{{ tag }}"
      user: "{{ service_user.uid }}:{{ service_user.group }}"
      pull: true
      volumes:
        - "/var/lib/{{ service }}:/var/lib/eventstore"
        - "/var/log/{{ service }}:/var/log/eventstore"
      restart_policy: always
      ports:
        - 2113:2113
        - 1112:1112
      env:
        EVENTSTORE_INSECURE: "true"
        EVENTSTORE_EXT_IP: "0.0.0.0"
        EVENTSTORE_EXT_HOST_ADVERTISE_AS: "{{ ip_adder.stdout }}"
        EVENTSTORE_INT_IP: "0.0.0.0"
        EVENTSTORE_INT_HOST_ADVERTISE_AS: "{{ ip_adder.stdout }}"
        EVENTSTORE_CLUSTER_SIZE: "3"
        EVENTSTORE_CLUSTER_DNS: "{{ cluster_name }}"