name: Set service CRON
dependencies:
  - role: user
  - role: buri
vars:
  service:
  artifact_group: #Could use this instead of service_in_docker to decide if you should downloade service or not.
  webserver_port:
  env:
  visuale_host:
  service_tag:
  service_type:
  health_type:
  hostname:
  is_frontend: false
  artifact_release:
tasks:
  - set_fact:
      visuale: "https://{{ visuale_host }}/api/status/{{ env }}/{{ service | capitalize }}/{{ hostname }}?service_tag={{ service_tag }}&service_type={{ service_type }}"
      service_exec: {{ './buri -t '+ health_type +' -a '+ artifact_id +' -g '+ artifact_group + ('-u '+artifact_release if artifact_release is defined else '') +' -r > /dev/null' if service_in_docker is not defined }}
  - block:
    - name: Set service cron file
      copy:
        content: |
          MAILTO=""
          PATH=/bin:/usr/bin:/usr/local/bin
          */6 * * * * ./buri -t go -a buri -g no/cantara/gotools > /dev/null
          */6 * * * * ./buri -t go -a nerthus2/probe/health -g no/cantara/gotools > /dev/null
          {{ '*/6 * * * * ' + service_exec if service_exec is defined }}
          */5 * * * * ./nerthus2-probe-health -d 5m -r "{{ visuale }}" -h "http://localhost:{{ webserver_port }}{{ '/'+service if not is_frontend else '' }}/health" -a "{{ artifact_id }}" -t "{{ health_type }}" > /dev/null &
        dest: "/home/{{ service }}/CRON"
        mode: '0640'
      register: service_cron
    - name: Remove cronjob from crontab scheduler
      shell: crontab -r
      ignore_errors: true
      when: service_cron is changed
    - name: Configure cronjob via crontab scheduler
      shell: "crontab /home/{{ service }}/CRON"
      when: service_cron is changed
    become: yes
    become_user: "{{ service }}"