name: Set service CRON
dependencies:
  - role: user
  - role: buri
vars:
  service:
  artifact_group: #Could use this instead of service_in_docker to decide if you should downloade service or not.
  webserver_port:
  env:
  visuale_host:
  service_tag:
  service_type:
  health_type:
  hostname:
  is_frontend: false
  artifact_release:
  extra_service_cron:
  version_filter: "*.*.*"
  routing_method: "path"
tasks:
  - set_fact:
      visuale: "https://{{ visuale_host }}/api/status/{{ env }}/{{ service | capitalize }}/{{ hostname }}?service_tag={{ service_tag }}&service_type={{ service_type }}"
    when:
      - health_type is defined
      - (webserver_port is defined) or (cluster_ports['conn'] is defined)
  - set_fact:
      nexus_repo: "{{ artifact_release if ('snapshot' not in (version_filter | lower)) else artifact_snapshot }}"
    when:
      - artifact_release is defined
  - set_fact:
      service_exec: "{{ '~/buri -t '+ health_type +' -a '+ artifact_id +' -g '+ artifact_group + ' -f ' + '\"' + version_filter + '\"' + ((' -u '+nexus_repo) if nexus_repo is defined else '') +' -r > /dev/null' }}"
    when: service_in_docker is not defined
  - set_fact:
      health_cron: "*/5 * * * * ~/nerthus2-probe-health -d 5m -r '{{ visuale }}' -h 'http://localhost:{{ webserver_port if webserver_port is defined else cluster_ports['conn'] }}{{ '/'+service if not is_frontend OR routing_method == 'host' else '' }}{{ '' if extra_health_path is not defined else '/'+(extra_health_path or '') }}/health' -a '{{ artifact_id }}' -t '{{ health_type }}' > /dev/null &"
    when: visuale is defined
  - block:
    - name: Set service cron file
      copy:
        content: |
          MAILTO=""
          PATH=/bin:/usr/bin:/usr/local/bin
          */6 * * * * ~/buri -t go -a buri -g no/cantara/gotools > /dev/null
          */6 * * * * ~/buri -t go -a nerthus2/probe/health -g no/cantara/gotools > /dev/null
          {{ ('*/6 * * * * ' + service_exec) if service_exec is defined }}
          {{ health_cron if health_cron is defined }}
          {{ extra_service_cron if extra_service_cron is defined }}
        dest: "/home/{{ service }}/CRON"
        mode: '0640'
      register: service_cron
    - name: Remove cronjob from crontab scheduler
      shell: crontab -r
      ignore_errors: true
      when: service_cron is changed
    - name: Configure cronjob via crontab scheduler
      shell: "crontab /home/{{ service }}/CRON"
      when: service_cron is changed
    become: yes
    become_user: "{{ service }}"